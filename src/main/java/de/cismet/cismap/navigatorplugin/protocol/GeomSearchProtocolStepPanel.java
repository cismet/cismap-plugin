/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.cismap.navigatorplugin.protocol;

import com.vividsolutions.jts.geom.Geometry;

import de.cismet.cismap.commons.CrsTransformer;
import de.cismet.cismap.commons.XBoundingBox;
import de.cismet.cismap.commons.features.SearchFeature;
import de.cismet.cismap.commons.gui.MappingComponent;
import de.cismet.cismap.commons.gui.layerwidget.ActiveLayerModel;
import de.cismet.cismap.commons.raster.wms.simple.SimpleWMS;
import de.cismet.cismap.commons.raster.wms.simple.SimpleWmsGetMapUrl;

import de.cismet.commons.gui.protocol.AbstractProtocolStepPanel;

/**
 * DOCUMENT ME!
 *
 * @author   jruiz
 * @version  $Revision$, $Date$
 */
public class GeomSearchProtocolStepPanel extends AbstractProtocolStepPanel<GeomSearchProtocolStep> {

    //~ Instance fields --------------------------------------------------------

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cismet.cismap.commons.gui.MappingComponent mappingComponent1;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates a new GeomSearchProtocolStepPanel object.
     */
    public GeomSearchProtocolStepPanel() {
        this(null);
    }

    /**
     * Creates a new GeomSearchProtocolStepPanel object.
     *
     * @param  geomSearchProtocolStep  DOCUMENT ME!
     */
    public GeomSearchProtocolStepPanel(final GeomSearchProtocolStep geomSearchProtocolStep) {
        this(geomSearchProtocolStep, true);
    }

    /**
     * Creates new form GeomSearchProtocolStepPanel.
     *
     * @param  geomSearchProtocolStep  DOCUMENT ME!
     * @param  showSearchGeometry      DOCUMENT ME!
     */
    public GeomSearchProtocolStepPanel(final GeomSearchProtocolStep geomSearchProtocolStep,
            final boolean showSearchGeometry) {
        super(geomSearchProtocolStep);
        initComponents();

        if ((geomSearchProtocolStep != null) && (geomSearchProtocolStep.getGeometry() != null)) {
            initMap(geomSearchProtocolStep.getGeometry(), mappingComponent1, showSearchGeometry);
        }
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * DOCUMENT ME!
     *
     * @param  geom                DOCUMENT ME!
     * @param  map                 DOCUMENT ME!
     * @param  showSearchGeometry  DOCUMENT ME!
     */
    public void initMap(final Geometry geom, final MappingComponent map, final boolean showSearchGeometry) {
        final String srs = getProtocolStep().getConfiguration().getSrs();
        final String wmsMapUrl = getProtocolStep().getConfiguration().getWmsMapUrl();
        final double zoomFactor = getProtocolStep().getConfiguration().getZoomFactor();

        final Geometry transformedGeom = CrsTransformer.transformToGivenCrs(geom, srs);

        final XBoundingBox bbox = new XBoundingBox(transformedGeom.getEnvelope(), srs, true);
        if (showSearchGeometry) {
            bbox.setX1(bbox.getX1() - (zoomFactor * bbox.getWidth()));
            bbox.setX2(bbox.getX2() + (zoomFactor * bbox.getWidth()));
            bbox.setY1(bbox.getY1() - (zoomFactor * bbox.getHeight()));
            bbox.setY2(bbox.getY2() + (zoomFactor * bbox.getHeight()));
        }
        final ActiveLayerModel mappingModel = new ActiveLayerModel();
        mappingModel.setSrs(srs);
        mappingModel.addHome(bbox);

        final SimpleWMS swms = new SimpleWMS(new SimpleWmsGetMapUrl(wmsMapUrl));

        mappingModel.addLayer(swms);

        map.setMappingModel(mappingModel);
        map.setInteracting(false);
        map.setInteractionMode(MappingComponent.OVERVIEW);

        if (showSearchGeometry) {
            final SearchFeature searchFeature = new SearchFeature(transformedGeom, null);
            map.getFeatureCollection().addFeature(searchFeature);
        }

        map.unlock();
        map.gotoInitialBoundingBox();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        final java.awt.GridBagConstraints gridBagConstraints;

        mappingComponent1 = new de.cismet.cismap.commons.gui.MappingComponent();

        setMinimumSize(new java.awt.Dimension(29, 150));
        setPreferredSize(new java.awt.Dimension(300, 200));
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        add(mappingComponent1, gridBagConstraints);
    } // </editor-fold>//GEN-END:initComponents
}
